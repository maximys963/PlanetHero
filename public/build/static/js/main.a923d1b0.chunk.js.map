{"version":3,"sources":["assets/images/pollution.jpg","reducers/session.js","reducers/events.js","store/store.js","actionTypes/sessionTypes.js","actionTypes/eventTypes.js","actions/session.js","components/WhiteInput/WhiteInput.js","components/CustomButton/CustomButton.js","containers/LoginScreen/LoginForm/LoginForm.js","containers/LoginScreen/Registration /RegistrationForm.js","containers/LoginScreen/LoginScreen.js","containers/PlanetHero/MainMenu/MainMenu.js","containers/Events/EventItem/EventItem.js","constants/colors.js","actions/events.js","components/DarkInput/DarkInput.js","containers/Events/AddEventForm/AddEventForm.js","containers/Events/Events.js","containers/Profile/Profile.js","containers/Teams/TeamItem/TeamItem.js","containers/Teams/AddTeamForm/AddTeamForm.js","containers/Teams/Teams.js","helpers/checkToken.js","containers/PlanetHero/PlanetHero.js","containers/Navigation/Naviagtion.js","App.js","serviceWorker.js","index.js","containers/LoginScreen/Registration /RegistrationForm.module.css","containers/LoginScreen/LoginForm/LoginForm.module.css","containers/Events/AddEventForm/AddEventForm.module.css","containers/Teams/AddTeamForm/AddTeamForm.module.css","containers/PlanetHero/MainMenu/MainMenu.module.css","containers/LoginScreen/LoginScreen.module.css","containers/Events/Events.module.css","assets/images/thumb-1920-473154.jpg","containers/PlanetHero/PlanetHero.module.css","containers/Teams/Teams.module.css"],"names":["module","exports","initialState","isLoginLoading","list","isEventsLoading","rootReducer","combineReducers","session","state","actions","produce","draftState","type","isLogged","events","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","login","loginForm","history","username","password","dispatch","a","axios","post","resp","localStorage","setItem","data","token","console","log","error","InputField","withStyles","root","color","fontFamily","borderColor","borderWidth","padding","TextField","WhiteInput","props","label","variant","defaultValue","style","className","value","onChange","CustomButton","children","onClick","hoverColor","Button","LoginForm","useState","setLoginForm","useDispatch","useHistory","onInputChange","e","field","target","push","onChangeForm","styles","formContainer","title","focusedColor","focusedBorderColor","input","width","id","signUpContainer","question","signUp","marginTop","RegistrationForm","repeatPassword","registrationForm","setRegistrationForm","signUpForm","LoginScreen","activeForm","setActiveForm","loginContainer","loginImage","src","forest","filter","mainContainer","MainMenu","onMenuItemClick","direction","menuContainer","logo","menuListContainer","menuListItem","useStyles","makeStyles","maxWidth","minHeight","marginRight","media","height","typography","button","EventItem","classes","description","imageURL","Card","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","component","CardActions","size","addEvent","eventData","url","getItem","headers","getEvents","get","DarkInput","AddEventForm","eventForm","setEventForm","useCallback","onSubmit","eventActions","setActiveEventPage","addEventFormContainer","addEventForm","date","buttonContainer","Events","activeEventPage","useSelector","useEffect","event_page","event_container","button_container","cardContainer","CircularProgress","map","event","Profile","fontSize","Teams","checkToken","PlanetHero","isTokenExists","plh_container","path","render","to","Navigation","exact","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a923d1b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pollution.8a3c7c06.jpg\";","import produce from 'immer';\n\nimport * as constants from '../actionTypes/sessionTypes';\n\nconst initialState = {\n    isLoginLoading :false\n};\n\nexport const session = (state = initialState, actions) => {\n    return produce(state, draftState => {\n        switch (actions.type) {\n        case constants.START_LOGIN :\n            draftState.isLoginLoading = true;\n            break;\n        case constants.LOGIN_SUCCESS :\n            draftState.isLoginLoading = false;\n            draftState.isLogged  = true;\n            break;\n        case constants.LOGIN_FAIL :\n            draftState.isLoginLoading = false;\n            draftState.isLogged  = false;\n            break;\n        }\n    });\n};\n","import produce from 'immer';\n\nimport * as constants from '../actionTypes/eventTypes';\n\nconst initialState = {\n    list : [],\n    isEventsLoading: false\n};\n\nexport const events = (state = initialState, actions) => {\n    const { list } = actions;\n    return produce(state, draftState => {\n        switch (actions.type) {\n        case constants.START_EVENT_FETCHING :\n            draftState.isEventsLoading = true;\n            draftState.list = list;\n            break;\n        case constants.EVENT_FETCHING_SUCCESS :\n            draftState.isEventsLoading = false;\n            draftState.list = list;\n            break;\n        case constants.EVENT_FETCHING_FAIL :\n            draftState.isEventsLoading = false;\n            draftState.isLogged  = false;\n            break;\n        }\n    });\n};\n","import {\n    applyMiddleware,\n    combineReducers,\n    compose,\n    createStore\n}                  from 'redux';\nimport thunk       from 'redux-thunk';\nimport { session } from '../reducers/session';\nimport { events }  from '../reducers/events';\n\nconst rootReducer = combineReducers({\n    session,\n    events\n});\n\nconst initialState = {};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);\n","export const START_LOGIN   = 'START_LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL    = 'LOGIN_FAIL';\n","export const START_EVENT_FETCHING   = 'START_EVENT_FETCHING';\nexport const EVENT_FETCHING_SUCCESS = 'EVENT_FETCHING_SUCCESS';\nexport const EVENT_FETCHING_FAIL   = 'EVENT_FETCHING_FAIL';\n","import axios from 'axios';\n\nimport * as constants from '../actionTypes/sessionTypes';\n\nexport function login(loginForm, history) {\n    const { username, password} = loginForm;\n    return async dispatch => {\n        try{\n            dispatch({ type : constants.START_LOGIN });\n            const resp = await axios.post('http://localhost:3000/users/login',{ username, password});\n            localStorage.setItem('token', resp.data.token);\n            dispatch({\n                type : constants.LOGIN_SUCCESS,\n            });\n            console.log('resp', resp);\n            console.log('history', history);\n        } catch (err) {\n            console.error('error', err);\n            dispatch({\n                type : constants.LOGIN_FAIL,\n            });\n        }\n    };\n}\n\nexport function signUp(signUpForm) {\n    const { username, password } = signUpForm;\n    return async dispatch => {\n        try{\n            dispatch({ type : constants.START_LOGIN });\n            const resp = await axios.post('http://localhost:3000/users/signup',{ username, password});\n            localStorage.setItem('token', resp.data.token);\n            dispatch({ type : constants.LOGIN_SUCCESS });\n            console.log('resp', resp);\n        } catch (err) {\n            console.error('error', err);\n            dispatch({ type : constants.LOGIN_FAIL });\n        }\n    };\n}\n\n// export  async function checkSession() {\n//     const token = localStorage.getItem('token');\n//\n//     const resp = await axios.post('http://localhost:3000/users/checkJWToken',\n//         {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Authorization': `bearer ${token}`\n//             },\n//         });\n//     console.log('resp', resp);\n// }\n","import React         from 'react';\nimport { TextField } from '@material-ui/core';\nimport {\n    withStyles,\n}                   from '@material-ui/core/styles';\n\nconst InputField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: 'white',\n        },\n        '& label': {\n            color: 'white',\n            fontFamily: 'Alata',\n        },\n        '& input:valid + fieldset': {\n            borderColor: 'white',\n            borderWidth: 2,\n        },\n        '& input:invalid + fieldset': {\n            borderColor: 'red',\n            borderWidth: 2,\n        },\n        '& input:valid:focus + fieldset': {\n            borderColor: '#bdc3c7',\n            padding: '4px !important', // override inline-style\n        },\n        '& .MuiOutlinedInput-root': {\n            color: 'white',\n            fontFamily: 'Alata',\n            '& fieldset': {\n                borderColor: 'red',\n                color: 'white'\n            },\n            '&:hover fieldset': {\n                borderColor: 'white',\n            },\n            '&.Mui-focused fieldset': {\n                borderColor:'white',\n            },\n        },\n    },\n})(TextField);\n\n\nexport function WhiteInput (props) {\n    const {\n        label,\n        variant,\n        defaultValue,\n        type,\n        style,\n        className,\n        value,\n        onChange,\n    } = props;\n\n    return(\n        <div className = {className}>\n            <InputField\n                style        = {{ color: 'white', ...style}}\n                label        = {label}\n                variant      = {variant}\n                defaultValue = {defaultValue}\n                type         = {type}\n                value        = {value}\n                onChange     = {onChange}\n            />\n        </div>\n    )\n}\n","import React          from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Button         from '@material-ui/core/Button';\n\nexport function CustomButton(props) {\n    const {\n        children,\n        variant,\n        color,\n        style,\n        onClick,\n        hoverColor\n    } = props;\n\n    const CustomButton = withStyles({\n        root: {\n            color : color,\n            borderColor: color,\n            borderWidth: '2px',\n            fontFamily: 'Alata',\n            '&:hover' : {\n                color : hoverColor,\n                borderColor: hoverColor,\n                borderWidth: '2px',\n            }\n        },\n    })(Button);\n    return(\n        <CustomButton\n            style   = {{...style}}\n            onClick = {onClick}\n            variant = {variant}\n            color   = {color}>\n            {children}\n        </CustomButton>\n    )\n}\n","import React, { useState } from 'react';\nimport { useDispatch }     from 'react-redux';\nimport { useHistory }      from 'react-router-dom';\nimport { login }           from '../../../actions/session';\nimport { WhiteInput }      from '../../../components/WhiteInput/WhiteInput';\nimport { CustomButton }     from '../../../components/CustomButton/CustomButton';\nimport styles              from './LoginForm.module.css';\n\nexport function LoginForm(props) {\n    const [loginForm, setLoginForm ] = useState({ username: '', password: '' });\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    function onInputChange(e, field) {\n        setLoginForm({...loginForm, [field] : e.target.value });\n    }\n\n    async function onSubmit() {\n        await dispatch(login(loginForm, history));\n        history.push('/event');\n    }\n\n    const { onChangeForm } = props;\n\n    return(\n        <div className={styles.formContainer}>\n            <div className={styles.title}>LOGIN</div>\n            <WhiteInput\n                color              = 'white'\n                focusedColor       = 'yellow'\n                focusedBorderColor = '#bdc3c7'\n                className          = {styles.input}\n                style              = {{width: '250px'}}\n                onChange           = {(e) => onInputChange(e, 'username')}\n                value              = {loginForm.username}\n                label              = 'Username'\n                variant            = 'outlined'\n                defaultValue       = ''\n                id                 = 'validation-outlined-input'\n            />\n            <WhiteInput\n                color              = 'white'\n                focusedColor       = 'yellow'\n                focusedBorderColor = '#bdc3c7'\n                className          = {styles.input}\n                style              = {{width: '250px'}}\n                onChange           = {(e) => onInputChange(e, 'password')}\n                value              = {loginForm.password}\n                label              = 'Password'\n                type               = 'password'\n                variant            = 'outlined'\n                defaultValue       = ''\n                id                 = 'validation-outlined-input'\n            />\n            <div className={styles.signUpContainer}>\n                <div className={styles.question}>Dont have account ?</div>\n                <div className={styles.signUp} onClick={() => onChangeForm('registration')} >Sign up</div>\n            </div>\n            <CustomButton\n                style      = {{ marginTop: '20px' }}\n                onClick    = {onSubmit}\n                variant    = 'outlined'\n                color      = 'white'\n                hoverColor = 'yellow'\n            >\n                LOGIN\n            </CustomButton>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { useDispatch }     from 'react-redux';\nimport { signUp }           from '../../../actions/session';\nimport { WhiteInput }      from '../../../components/WhiteInput/WhiteInput';\nimport { CustomButton }     from '../../../components/CustomButton/CustomButton';\nimport styles              from './RegistrationForm.module.css';\n\nexport function RegistrationForm(props) {\n    const [registrationForm, setRegistrationForm ] = useState({ username: '', password: '', repeatPassword: '' });\n    const dispatch = useDispatch();\n\n    function onInputChange(e, field) {\n        setRegistrationForm({...registrationForm, [field] : e.target.value });\n    }\n\n    function onSubmit() {\n        dispatch(signUp(registrationForm));\n    }\n\n    const { onChangeForm } = props;\n\n    return(\n        <div className={styles.formContainer}>\n            <div className={styles.title}>REGISTRATION</div>\n            <WhiteInput\n                className    = {styles.input}\n                style        = {{width: '250px'}}\n                onChange     = {(e) => onInputChange(e, 'username')}\n                value        = {registrationForm.username}\n                label        = 'Username'\n                variant      = 'outlined'\n                defaultValue = ''\n                id           = 'validation-outlined-input'\n            />\n            <WhiteInput\n                className    = {styles.input}\n                style        = {{width: '250px'}}\n                onChange     = {(e) => onInputChange(e, 'password')}\n                value        = {registrationForm.password}\n                label        = 'Password'\n                variant      = 'outlined'\n                type         = 'password'\n                defaultValue = ''\n                id           = 'validation-outlined-input'\n            />\n            <WhiteInput\n                className    = {styles.input}\n                style        = {{width: '250px'}}\n                onChange     = {(e) => onInputChange(e, 'repeatPassword')}\n                value        = {registrationForm.repeatPassword}\n                label        = 'Repeat Password'\n                variant      = 'outlined'\n                type         = 'password'\n                defaultValue = ''\n                id           = 'validation-outlined-input'\n            />\n            <div className={styles.signUpContainer}>\n                <div className={styles.question}>Already have account ?</div>\n                <div className={styles.signUp} onClick={() => onChangeForm('login')} >Log in</div>\n            </div>\n            <CustomButton\n                style   = {{ marginTop: '20px' }}\n                onClick = {onSubmit}\n                variant = 'outlined'\n                color   = 'secondary'\n            >\n            CREATE ACCOUNT\n            </CustomButton>\n        </div>\n    );\n}\n","import React, { useState }  from 'react';\nimport { useHistory }       from 'react-router';\nimport { LoginForm }        from './LoginForm/LoginForm';\nimport { RegistrationForm } from './Registration /RegistrationForm';\n// import { checkToken }    from '../../helpers/checkToken';\nimport forest               from '../../assets/images/thumb-1920-473154.jpg';\nimport styles               from './LoginScreen.module.css';\n\nexport function LoginScreen() {\n    const [ activeForm, setActiveForm ] = useState('login');\n    // const history = useHistory();\n    //\n    // checkToken(history);\n    return(\n        <div className={styles.loginContainer}>\n            <img\n                className={styles.loginImage}\n                src = {forest}\n            />\n            <div className={styles.filter}/>\n            <div className={styles.mainContainer}>\n                {\n                    activeForm === 'login'\n                        ? <LoginForm onChangeForm = {setActiveForm} />\n                        : <RegistrationForm onChangeForm = {setActiveForm} />\n                }\n            </div>\n        </div>\n    );\n}\n\n","import React from 'react';\nimport { useHistory} from 'react-router';\nimport styles from './MainMenu.module.css';\n\nexport function MainMenu() {\n    const history = useHistory();\n\n    function onMenuItemClick(direction) {\n        history.push(`/planetHero/${direction}`);\n        console.log(`/planetHero/${direction}`);\n    }\n\n    return (\n        <div className={styles.menuContainer}>\n            <div className={styles.logo}>Planet Hero</div>\n            <ul className={styles.menuListContainer}>\n                <li\n                    className={styles.menuListItem}\n                    onClick={() => onMenuItemClick('events')}\n                >\n                    Events\n                </li>\n                <li\n                    className={styles.menuListItem}\n                    onClick={() => onMenuItemClick('teams')}\n                >\n                    Teams\n                </li>\n                <li\n                    className={styles.menuListItem}\n                    onClick={() => onMenuItemClick('profile')}\n                >\n                    Profile\n                </li>\n            </ul>\n        </div>\n    );\n}\n\n","import React, { useState } from 'react';\nimport { makeStyles }   from '@material-ui/core/styles';\nimport { CustomButton } from '../../../components/CustomButton/CustomButton';\nimport Card             from '@material-ui/core/Card';\nimport CardActionArea   from '@material-ui/core/CardActionArea';\nimport CardActions      from '@material-ui/core/CardActions';\nimport CardContent      from '@material-ui/core/CardContent';\nimport CardMedia        from '@material-ui/core/CardMedia';\nimport Button           from '@material-ui/core/Button';\nimport Typography       from '@material-ui/core/Typography';\n\nimport { DARK_MOUNTAIN_MELLOW } from '../../../constants/colors';\nimport {login} from '../../../actions/session';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n        width: 250,\n        minHeight: 270,\n        marginRight: 20,\n        marginTop: 20\n    },\n    media: {\n        height: 140,\n        fontFamily: 'Alata'\n    },\n    typography : {\n        fontFamily: 'Alata'\n    },\n    button : {\n        color : DARK_MOUNTAIN_MELLOW\n    }\n});\n\n\nexport default function EventItem(props) {\n\n\n\n    const classes = useStyles();\n\n    const {\n        title,\n        description,\n        imageURL\n    } = props;\n\n    console.log('description', description);\n\n    return (\n        <Card className={classes.root}>\n            <CardActionArea>\n                <CardMedia\n                    className = {classes.media}\n                    image     = {imageURL}\n                    title     = {title}\n                />\n                <CardContent>\n                    <Typography\n                        className={classes.typography}\n                        gutterBottom variant=\"h5\" component=\"h2\">\n                        {title}\n                    </Typography>\n                    <Typography\n                        className = {classes.typography}\n                        variant   = \"body2\"\n                        color     = \"textSecondary\"\n                        component = \"p\">\n                        {description}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button\n                    className = {classes.button}\n                    size=\"small\"\n                    color=\"primary\">\n                    Participate\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n","export const NIGHT_BLACK = '#2f3640';\nexport const GREY_SKY = '#bdc3c7';\nexport const DARK_MOUNTAIN_MELLOW = '#10ac84';\n","import axios from 'axios';\nimport * as constants from '../actionTypes/eventTypes';\n\nexport function addEvent(eventData) {\n    return async dispatch => {\n        try {\n            const {\n                title,\n                url,\n                data\n            } = eventData;\n\n            console.log('eventData', eventData);\n            const token = localStorage.getItem('token');\n            const resp = await axios.post('http://localhost:3000/events',\n                {\n                    title,\n                    imageURL: url,\n                    data\n                },\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `bearer ${token}`,\n                    },\n                }\n            );\n            console.log('event was created', resp);\n        } catch (err) {\n            console.log('error', err);\n        }\n    };\n}\n\nexport function getEvents() {\n    return async dispatch => {\n        try {\n            await dispatch({ type: constants.START_EVENT_FETCHING });\n            const token = localStorage.getItem('token');\n            const resp = await axios.get('http://localhost:3000/events',\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `bearer ${token}`,\n                    },\n                });\n            await dispatch({\n                type: constants.EVENT_FETCHING_SUCCESS,\n                list: resp.data\n            });\n        } catch (err) {\n            console.log('error', err);\n            await dispatch({ type: constants.EVENT_FETCHING_FAIL });\n        }\n    };\n}\n\n/*\n\n//\n//     const resp = await axios.post('http://localhost:3000/users/checkJWToken',\n//         {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Authorization': `bearer ${token}`\n//             },\n//         });\n\n */\n","import React           from 'react';\nimport { TextField }   from '@material-ui/core';\nimport {\n    withStyles,\n}                      from '@material-ui/core/styles';\nimport { NIGHT_BLACK } from '../../constants/colors';\n\nconst InputField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: NIGHT_BLACK,\n        },\n        '& label': {\n            color: NIGHT_BLACK,\n            fontFamily: 'Alata',\n        },\n        '& input:valid + fieldset': {\n            borderColor: NIGHT_BLACK,\n            borderWidth: 2,\n        },\n        '& input:invalid + fieldset': {\n            borderColor: 'red',\n            borderWidth: 2,\n        },\n        '& input:valid:focus + fieldset': {\n            borderColor: '#bdc3c7',\n            padding: '4px !important', // override inline-style\n        },\n        '& .MuiOutlinedInput-root': {\n            color: NIGHT_BLACK,\n            fontFamily: 'Alata',\n            '& fieldset': {\n                borderColor: 'red',\n                color: NIGHT_BLACK\n            },\n            '&:hover fieldset': {\n                borderColor: NIGHT_BLACK,\n            },\n            '&.Mui-focused fieldset': {\n                borderColor:NIGHT_BLACK,\n            },\n        },\n    },\n})(TextField);\n\n\nexport function DarkInput (props) {\n    const {\n        label,\n        variant,\n        defaultValue,\n        type,\n        style,\n        className,\n        value,\n        onChange,\n    } = props;\n\n    return(\n        <div className = {className}>\n            <InputField\n                style        = {{ color: 'white', ...style}}\n                label        = {label}\n                variant      = {variant}\n                defaultValue = {defaultValue}\n                type         = {type}\n                value        = {value}\n                onChange     = {onChange}\n            />\n        </div>\n    )\n}\n","import React, {useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as eventActions from '../../../actions/events';\nimport { DarkInput } from '../../../components/DarkInput/DarkInput';\nimport { NIGHT_BLACK, GREY_SKY }  from '../../../constants/colors';\nimport { CustomButton } from '../../../components/CustomButton/CustomButton';\nimport { Button }       from '@material-ui/core';\n\nimport styles from './AddEventForm.module.css';\n\nconst INPUT_WIDTH = '300px';\n\nfunction AddEventForm (props) {\n    const [ eventForm, setEventForm ] = useState({});\n    const dispatch = useDispatch();\n\n\n    const onInputChange = useCallback((e, field) => {\n        setEventForm({ ...eventForm, [field]: e.target.value});\n    }, [eventForm]);\n\n    const onSubmit = useCallback(() => {\n        dispatch(eventActions.addEvent(eventForm));\n    }, [eventForm]);\n\n    console.log('eventForm', eventForm);\n\n    const { setActiveEventPage } = props;\n\n    return (\n        <div className={styles.addEventFormContainer}>\n            <div className={styles.addEventForm}>\n                <div className={styles.title}>ADD EVENT</div>\n                <DarkInput\n                    className          = {styles.input}\n                    style              = {{width: INPUT_WIDTH}}\n                    onChange           = {(e) => onInputChange(e, 'title')}\n                    value              = {eventForm.title}\n                    label              = 'Title'\n                    variant            = 'outlined'\n                />\n                <DarkInput\n                    className          = {styles.input}\n                    style              = {{width: INPUT_WIDTH}}\n                    onChange           = {(e) => onInputChange(e, 'url')}\n                    value              = {eventForm.url}\n                    label              = 'Image Url'\n                    variant            = 'outlined'\n                />\n                <DarkInput\n                    color              = {NIGHT_BLACK}\n                    focusedBorderColor = '#bdc3c7'\n                    className          = {styles.input}\n                    style              = {{width: INPUT_WIDTH}}\n                    onChange           = {(e) => onInputChange(e, 'date')}\n                    value              = {eventForm.date}\n                    label              = 'Date / Time'\n                    variant            = 'outlined'\n                />\n                <div className={styles.buttonContainer}>\n                    <CustomButton\n                        style      = {{ marginTop: '20px' }}\n                        variant    = 'outlined'\n                        color      = {NIGHT_BLACK}\n                        hoverColor = {GREY_SKY}\n                        onClick={() => setActiveEventPage('event')}\n                    >Back</CustomButton>\n                    <CustomButton\n                        style      = {{ marginTop: '20px' }}\n                        variant    = 'outlined'\n                        color      = {NIGHT_BLACK}\n                        hoverColor = {GREY_SKY}\n                        onClick={onSubmit}\n                    >Add Event</CustomButton>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default AddEventForm;\n","import React, {\n    useEffect,\n    useState\n} from 'react';\nimport {\n    useDispatch,\n    useSelector\n} from 'react-redux';\nimport EventItem         from './EventItem/EventItem';\nimport AddEventForm      from './AddEventForm/AddEventForm';\nimport CircularProgress  from '@material-ui/core/CircularProgress';\nimport { Button }        from '@material-ui/core';\nimport styles            from './Events.module.css';\nimport * as eventActions from '../../actions/events';\n\n\n\nfunction Events(){\n    const [activeEventPage, setActiveEventPage] = useState('event');\n    const dispatch = useDispatch();\n    const events = useSelector(state => state.events.list);\n    const isEventsLoading = useSelector(state => state.events.isEventsLoading);\n\n    console.log('events', events);\n\n    useEffect(() => {\n        dispatch(eventActions.getEvents());\n    }, []);\n\n    return (\n        <div className={styles.event_page}>\n            {\n                activeEventPage === 'event'\n                    ? (\n                        <div className={styles.event_container}>\n                            <div className={styles.button_container}>\n                                <Button\n                                    variant=\"outlined\"\n                                    onClick={() => setActiveEventPage('eventForm')}\n                                >Add Event</Button>\n                            </div>\n                            <div className={styles.cardContainer}>\n                                {\n                                    isEventsLoading\n                                        ? <CircularProgress />\n                                        : events.map((event) => (\n                                            <EventItem\n                                                title      = {event.title}\n                                                description = {event.description}\n                                                imageURL   = {event.imageURL}\n                                            />\n                                        ))\n                                }\n                            </div>\n                        </div>\n                    )\n                    : <AddEventForm setActiveEventPage = {setActiveEventPage} />\n            }\n        </div>\n    );\n}\n\nexport default Events;\n","import React from 'react';\n\nconst Profile = () => {\n    return (\n        <div>\n            <div style = {{ fontSize: '24px', fontFamily : 'Alata'  }}>Profile page in developing...</div>\n        </div>\n    );\n};\n\nexport default Profile;\n","import React            from 'react';\nimport { makeStyles }   from '@material-ui/core/styles';\nimport Card             from '@material-ui/core/Card';\nimport CardActionArea   from '@material-ui/core/CardActionArea';\nimport CardActions      from '@material-ui/core/CardActions';\nimport CardContent      from '@material-ui/core/CardContent';\nimport CardMedia        from '@material-ui/core/CardMedia';\nimport Button           from '@material-ui/core/Button';\nimport Typography       from '@material-ui/core/Typography';\n\nimport { DARK_MOUNTAIN_MELLOW } from '../../../constants/colors';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n        width: 250,\n        minHeight: 270,\n        marginRight: 20,\n        marginTop: 20\n    },\n    media: {\n        height: 140,\n        fontFamily: 'Alata'\n    },\n    typography : {\n        fontFamily: 'Alata'\n    },\n    button : {\n        color : DARK_MOUNTAIN_MELLOW\n    }\n});\n\n\nexport default function TeamItem(props) {\n\n\n\n    const classes = useStyles();\n\n    const {\n        title,\n        description,\n        imageURL\n    } = props;\n\n    console.log('description', description);\n\n    return (\n        <Card className={classes.root}>\n            <CardActionArea>\n                <CardMedia\n                    className = {classes.media}\n                    image     = {imageURL}\n                    title     = {title}\n                />\n                <CardContent>\n                    <Typography\n                        className={classes.typography}\n                        gutterBottom variant=\"h5\" component=\"h2\">\n                        {title}\n                    </Typography>\n                    <Typography\n                        className = {classes.typography}\n                        variant   = \"body2\"\n                        color     = \"textSecondary\"\n                        component = \"p\">\n                        {description}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button\n                    className = {classes.button}\n                    size=\"small\"\n                    color=\"primary\">\n                    Participate\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n","import React, {useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as eventActions from '../../../actions/events';\nimport { DarkInput } from '../../../components/DarkInput/DarkInput';\nimport { NIGHT_BLACK, GREY_SKY }  from '../../../constants/colors';\nimport { CustomButton } from '../../../components/CustomButton/CustomButton';\nimport { Button }       from '@material-ui/core';\n\nimport styles from './AddTeamForm.module.css';\n\nconst INPUT_WIDTH = '300px';\n\nfunction AddEventForm (props) {\n    const [ eventForm, setEventForm ] = useState({});\n    const dispatch = useDispatch();\n\n\n    const onInputChange = useCallback((e, field) => {\n        setEventForm({ ...eventForm, [field]: e.target.value});\n    }, [eventForm]);\n\n    const onSubmit = useCallback(() => {\n        dispatch(eventActions.addEvent(eventForm));\n    }, [eventForm]);\n\n    console.log('eventForm', eventForm);\n\n    const { setActiveEventPage } = props;\n\n    return (\n        <div className={styles.addEventFormContainer}>\n            <div className={styles.addEventForm}>\n                <div className={styles.title}>ADD EVENT</div>\n                <DarkInput\n                    className          = {styles.input}\n                    style              = {{width: INPUT_WIDTH}}\n                    onChange           = {(e) => onInputChange(e, 'title')}\n                    value              = {eventForm.title}\n                    label              = 'Title'\n                    variant            = 'outlined'\n                />\n                <DarkInput\n                    className          = {styles.input}\n                    style              = {{width: INPUT_WIDTH}}\n                    onChange           = {(e) => onInputChange(e, 'url')}\n                    value              = {eventForm.url}\n                    label              = 'Image Url'\n                    variant            = 'outlined'\n                />\n                <DarkInput\n                    color              = {NIGHT_BLACK}\n                    focusedBorderColor = '#bdc3c7'\n                    className          = {styles.input}\n                    style              = {{width: INPUT_WIDTH}}\n                    onChange           = {(e) => onInputChange(e, 'date')}\n                    value              = {eventForm.date}\n                    label              = 'Date / Time'\n                    variant            = 'outlined'\n                />\n                <div className={styles.buttonContainer}>\n                    <CustomButton\n                        style      = {{ marginTop: '20px' }}\n                        variant    = 'outlined'\n                        color      = {NIGHT_BLACK}\n                        hoverColor = {GREY_SKY}\n                        onClick={() => setActiveEventPage('event')}\n                    >Back</CustomButton>\n                    <CustomButton\n                        style      = {{ marginTop: '20px' }}\n                        variant    = 'outlined'\n                        color      = {NIGHT_BLACK}\n                        hoverColor = {GREY_SKY}\n                        onClick={onSubmit}\n                    >Add Event</CustomButton>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default AddEventForm;\n","import React, {\n    useEffect,\n    useState\n} from 'react';\nimport {\n    useDispatch,\n    useSelector\n} from 'react-redux';\nimport TeamIteam from './TeamItem/TeamItem';\nimport AddTeamsForm from './AddTeamForm/AddTeamForm';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Button } from '@material-ui/core';\n\nimport * as eventActions from '../../actions/events';\n\nimport styles from './Teams.module.css';\n\n\nfunction Teams(){\n    const [activeTeamPage, setActiveTeamPage] = useState('teams');\n    const dispatch = useDispatch();\n    const events = useSelector(state => state.events.list);\n    const isEventsLoading = useSelector(state => state.events.isEventsLoading);\n\n    console.log('events', events);\n\n    useEffect(() => {\n        dispatch(eventActions.getEvents());\n    }, []);\n\n    return (\n        <div className={styles.event_page}>\n            {/*{*/}\n            {/*    activeTeamPage === 'teams'*/}\n            {/*        ? (*/}\n            {/*            <div className={styles.event_container}>*/}\n            {/*                <div className={styles.button_container}>*/}\n            {/*                    <Button*/}\n            {/*                        variant=\"outlined\"*/}\n            {/*                        onClick={() => setActiveTeamPage('eventForm')}*/}\n            {/*                    >Add Event</Button>*/}\n            {/*                </div>*/}\n            {/*                <div className={styles.cardContainer}>*/}\n            {/*                    {*/}\n            {/*                        isEventsLoading*/}\n            {/*                            ? <CircularProgress />*/}\n            {/*                            : events.map((event) => (*/}\n            {/*                                <TeamIteam*/}\n            {/*                                    title      = {event.title}*/}\n            {/*                                    description = {event.description}*/}\n            {/*                                    imageURL   = {event.imageURL}*/}\n            {/*                                />*/}\n            {/*                            ))*/}\n            {/*                    }*/}\n            {/*                </div>*/}\n            {/*            </div>*/}\n            {/*        )*/}\n            {/*        : <AddTeamsForm setActiveTeamPage = {setActiveTeamPage} />*/}\n            {/*}*/}\n            <div style = {{ fontSize: '24px', fontFamily : 'Alata'  }}>Teams page in developing...</div>\n        </div>\n    );\n}\n\nexport default Teams;\n","\nexport const checkToken = () => {\n    const token = localStorage.getItem('token');\n\n    return !!token;\n};\n","import React        from 'react';\nimport {\n    Switch,\n    Route,\n    Redirect,\n    withRouter\n} from 'react-router-dom';\nimport { MainMenu } from './MainMenu/MainMenu';\nimport plantImage   from '../../assets/images/pollution.jpg';\n\nimport styles from './PlanetHero.module.css';\nimport Events from '../Events/Events';\nimport Profile from '../Profile/Profile';\nimport Teams from '../Teams/Teams';\n\nimport { checkToken } from '../../helpers/checkToken';\n\nexport function PlanetHero() {\n    const isTokenExists = checkToken();\n\n    return(\n        <div className={styles.plh_container}>\n            <MainMenu />\n            <Switch>\n                <Route path='/planetHero/events' render={() => (\n                    isTokenExists\n                        ? <Events />\n                        : <Redirect to='/login' />\n                )} />\n                <Route path='/planetHero/profile' render={() => (\n                    isTokenExists\n                        ? <Profile />\n                        : <Redirect to='/login' />\n                )} />\n                <Route path='/planetHero/teams' render={() => (\n                    isTokenExists\n                        ? <Teams />\n                        : <Redirect to='/login' />\n                )} />\n            </Switch>\n\n\n            {/*<div className={styles.plh_image_container}>*/}\n            {/*<img*/}\n            {/*    className={styles.plh_image}*/}\n            {/*    src={plantImage}*/}\n            {/*/>*/}\n            {/*<div className={styles.motto_container}>*/}\n            {/*    Be a hero for your planet.*/}\n            {/*</div>*/}\n            {/*</div>*/}\n        </div>\n    );\n}\n","import React from 'react';\nimport {\n    Switch,\n    Route,\n    Redirect,\n} from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { LoginScreen } from '../LoginScreen/LoginScreen';\nimport { PlanetHero }  from '../PlanetHero/PlanetHero';\nimport Events          from '../Events/Events';\nimport Profile         from '../Profile/Profile';\nimport Teams           from '../Teams/Teams';\n\nimport { checkToken }  from '../../helpers/checkToken';\n\nexport function Navigation() {\n    const isLogged = useSelector(state => state.session.isLogged);\n    const isTokenExists = checkToken();\n    console.log('isTokenExists', isTokenExists);\n\n    return(\n        <Switch>\n            <Route\n                path='/login'\n                render={() => (\n                    !isLogged\n                        ? <LoginScreen />\n                        : <Redirect to='/events' />\n                )}\n            />\n            <Route path='/planetHero' render={() => (\n                isLogged || isTokenExists\n                    ? <PlanetHero />\n                    : <Redirect to='/login' />\n            )} />\n            <Route exact path='/planetHero/events' render={() => (\n                isLogged || isTokenExists\n                    ? <Events />\n                    : <Redirect to='/login' />\n            )}/>\n            <Route exact path='/planetHero/profile' render={() => (\n                isLogged || isTokenExists\n                    ? <Profile />\n                    : <Redirect to='/login' />\n            )} />\n            <Route exact path='/planetHero/teams' render={() => (\n                isLogged || isTokenExists\n                    ? <Teams />\n                    : <Redirect to='/login' />\n            )} />\n            <Redirect to='/planetHero' />\n        </Switch>\n    );}\n","import React             from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider }      from 'react-redux';\nimport { store }         from './store/store';\nimport { Navigation }    from '../src/containers/Navigation/Naviagtion';\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Provider store={store}>\n                <BrowserRouter>\n                    <Navigation />\n                </BrowserRouter>\n            </Provider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React              from 'react';\nimport ReactDOM           from 'react-dom';\nimport App                from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"RegistrationForm_formContainer__jPM8D\",\"input\":\"RegistrationForm_input__1HGkG\",\"title\":\"RegistrationForm_title__X3fcg\",\"signUpContainer\":\"RegistrationForm_signUpContainer__3-sGC\",\"question\":\"RegistrationForm_question__xXtTX\",\"signUp\":\"RegistrationForm_signUp__3HXbz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"LoginForm_formContainer__BAPGc\",\"input\":\"LoginForm_input__3SdCS\",\"title\":\"LoginForm_title__2dyvC\",\"signUpContainer\":\"LoginForm_signUpContainer__Ylv7M\",\"question\":\"LoginForm_question__2jsjb\",\"signUp\":\"LoginForm_signUp__kPINU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addEventFormContainer\":\"AddEventForm_addEventFormContainer__2-Rki\",\"addEventForm\":\"AddEventForm_addEventForm__x_uOT\",\"title\":\"AddEventForm_title__3RJk_\",\"input\":\"AddEventForm_input__2gF8X\",\"buttonContainer\":\"AddEventForm_buttonContainer__20Zvz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addEventFormContainer\":\"AddTeamForm_addEventFormContainer__3h088\",\"addEventForm\":\"AddTeamForm_addEventForm__Z_Qkz\",\"title\":\"AddTeamForm_title__11M5A\",\"input\":\"AddTeamForm_input__m45wR\",\"buttonContainer\":\"AddTeamForm_buttonContainer__DSEwg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuContainer\":\"MainMenu_menuContainer__24Kr4\",\"logo\":\"MainMenu_logo__goMY1\",\"menuListContainer\":\"MainMenu_menuListContainer__3RDPP\",\"menuListItem\":\"MainMenu_menuListItem__10B0q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"LoginScreen_loginContainer__2Rrp2\",\"loginImage\":\"LoginScreen_loginImage__1Lm7K\",\"filter\":\"LoginScreen_filter__1j3M6\",\"mainContainer\":\"LoginScreen_mainContainer__3_Y4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event_page\":\"Events_event_page__2jJDN\",\"event_container\":\"Events_event_container__nbS_g\",\"button_container\":\"Events_button_container__1NDdW\",\"cardContainer\":\"Events_cardContainer__3pvB7\"};","module.exports = __webpack_public_path__ + \"static/media/thumb-1920-473154.23704356.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"plh_container\":\"PlanetHero_plh_container__3X6Zq\",\"plh_image_container\":\"PlanetHero_plh_image_container__1opIz\",\"plh_image\":\"PlanetHero_plh_image___otLk\",\"motto_container\":\"PlanetHero_motto_container__32C6J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"event_page\":\"Teams_event_page__1bmZA\",\"event_container\":\"Teams_event_container__2xHCl\",\"button_container\":\"Teams_button_container__7HoUk\",\"cardContainer\":\"Teams_cardContainer__JrfDK\"};"],"sourceRoot":""}